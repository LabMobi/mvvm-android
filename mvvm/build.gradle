repositories {
    google()
    mavenCentral()
}

apply plugin: 'signing'
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.vanniktech.maven.publish'

android {
    android {
        namespace 'mobi.lab.mvvm'
    }

    kotlinOptions {
        jvmTarget = "1.8"

        // For Kotlin API strict mode.
        // In the future we should be able to do it easier.
        // When https://youtrack.jetbrains.com/issue/KT-37652 is fixed
        // then we can use the module annotation to enable this instead of the compiler flag.
        freeCompilerArgs += '-Xexplicit-api=strict'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        merge '**/LICENSE.txt'
    }

    defaultConfig {
        compileSdkVersion rootProject.compileSdk
        targetSdkVersion rootProject.targetSdk
        minSdkVersion rootProject.minSdk
        version rootProject.ext.libraryVersion
    }

    libraryVariants.configureEach { variant ->
        variant.outputs.all { output ->
            if (variant.buildType.getName().contains("release")) {
                // Don't add the variant name to release artefacts
                outputFileName = "${archivesBaseName}-${rootProject.ext.libraryVersion}.aar"
            } else {
                outputFileName = "${archivesBaseName}-${variant.name}-${rootProject.ext.libraryVersion}.aar"
            }
        }
    }

    lint {
        fatal "StopShip"
    }
}

dependencies {
    androidTestImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test:runner:$testRunnerVersion"
    androidTestImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
}

mavenPublishing {
    // the first parameter represents which variant is published
    // the second whether to publish a sources jar
    // the third whether to publish a javadoc jar
    //configure(new AndroidSingleVariantLibrary("release", true, true))

    // false - manual release required via https://central.sonatype.com/publishing/deployments
    publishToMavenCentral(false)

    signAllPublications()

    coordinates("mobi.lab.mvvm", "mvvm", "${rootProject.ext.libraryVersion}")

    pom {
        name = "Mobi Lab MVVM library."
        description = "Mobi Lab MVVM is a library for using the MVVM architecture in your Android application."
        inceptionYear = "2019"
        url = "https://github.com/LabMobi/mvvm-android"
        licenses {
            license {
                name = "The MIT License"
                url = "https://opensource.org/licenses/mit-license.php"
                distribution = "https://opensource.org/licenses/mit-license.php"
            }
        }
        developers {
            developer {
                id = "android@lab.mobi"
                name = "Mobi Lab"
                url = "https://lab.mobi"
            }
        }
        scm {
            connection = 'https://github.com/LabMobi/mvvm-android.git'
            developerConnection = 'https://github.com/LabMobi/mvvm-android.git'
            url = 'https://github.com/LabMobi/mvvm-android'
        }
    }
}

def GROUP_CI_BUILD_TASKS = "Build"

tasks.register('buildLibDebug') {
    group = GROUP_CI_BUILD_TASKS
    description = "Build the debug version of components lib"
    dependsOn "build"
}

tasks.register('buildLibRelease') {
    group = GROUP_CI_BUILD_TASKS
    description = "Build the release version of components lib"
    dependsOn "buildLibDebug"
}

tasks.register('buildAndPublishRelease') {
    group = "Publish"
    description = "Build the library release version and publish it"
    dependsOn "buildLibRelease", "checkCode", "publishToMavenCentral"
}

publishToMavenCentral.mustRunAfter tasks.named('buildLibRelease').get()
publishToMavenCentral.mustRunAfter tasks.checkCode
