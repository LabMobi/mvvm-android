repositories {
    google()
    mavenCentral()
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    android {
        namespace 'mobi.lab.mvvm'
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        merge '**/LICENSE.txt'
    }

    defaultConfig {
        compileSdkVersion rootProject.compileSdk
        targetSdkVersion rootProject.targetSdk
        minSdkVersion rootProject.minSdk
        version rootProject.ext.libraryVersion
    }

    libraryVariants.all { variant ->
        variant.outputs.all { output ->
            if (variant.buildType.getName().contains("release")) {
                // Don't add the variant name to release artefacts
                outputFileName = "${archivesBaseName}-${rootProject.ext.libraryVersion}.aar"
            } else {
                outputFileName = "${archivesBaseName}-${variant.name}-${rootProject.ext.libraryVersion}.aar"
            }
        }
    }
}

dependencies {
    androidTestImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test:runner:$testRunnerVersion"
    androidTestImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
}

def GROUP_CI_BUILD_TASKS = "Build"

task buildLibDebug(dependsOn: ["build"])
buildLibDebug.group = GROUP_CI_BUILD_TASKS
buildLibDebug.description = "Build the debug version of components lib"

task buildLibRelease(dependsOn: ["buildLibDebug"])
buildLibRelease.group = GROUP_CI_BUILD_TASKS
buildLibRelease.description = "Build the release version of components lib"
